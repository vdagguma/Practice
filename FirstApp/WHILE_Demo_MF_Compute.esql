

CREATE COMPUTE MODULE WHILE_Demo_MF_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		DECLARE totalPrice DECIMAL 0;
		DECLARE totalQty INT 0; 		
--		DECLARE bookInRef REFERENCE TO InputRoot.XMLNSC.catalog.book;
		CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
		CREATE LASTCHILD OF OutputRoot.XMLNSC NAME 'CatalogInfo';
		CREATE LASTCHILD OF OutputRoot.XMLNSC.CatalogInfo NAME 'Book';
		DECLARE bookOutRef REFERENCE TO OutputRoot.XMLNSC.CatalogInfo.Book;
--		WHILE LASTMOVE(bookInRef) DO
		FOR bookInRef AS InputRoot.XMLNSC.catalog.book[] DO
--			SET totalPrice							= totalPrice + CAST(bookInRef.price AS DECIMAL);
			SET totalQty							= totalQty + 1;
			SET bookOutRef.Author					= bookInRef.author;
			SET bookOutRef.Price					= bookInRef.price;
			SET bookOutRef.PublishDate				= bookInRef.publish_date;	
			CREATE NEXTSIBLING OF bookOutRef AS bookOutRef REPEAT;
--			MOVE bookInRef NEXTSIBLING;
		END FOR;
		DELETE FIELD bookOutRef;
		CREATE LASTCHILD OF OutputRoot.XMLNSC.CatalogInfo NAME 'cartInfo';
		DECLARE cartInfoRef REFERENCE TO OutputRoot.XMLNSC.CatalogInfo.cartInfo;
		SET cartInfoRef.TotalPrice					= totalPrice;
		SET cartInfoRef.NoOfBooks					= totalQty;
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

END MODULE;
